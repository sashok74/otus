name: Build ci-cd with dynamic and static linking

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Release, Debug]
        build_type: [SHARED, STATIC]
        
    steps:
      # Проверка репозитория
      - name: Checkout repository
        uses: actions/checkout@v2
      
      # Установка необходимых инструментов
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      # Создание директории сборки
      - name: Create build directory
        run: mkdir -p ci-cd/build

      # Конфигурация и генерация CMake файлов
      - name: Configure CMake
        run: |
          cd ci-cd/build
          cmake .. -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DBUILD_SHARED_LIBS=${{ matrix.build_type == 'SHARED' }}

      # Сборка проекта
      - name: Build project
        run: |
          cd ci-cd/build
          cmake --build .

      # Печать версии
      - name: Print project version
        run: |
          cd ci-cd/build/app
          ./HelloApp     

      # Публикация пакета
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./HellowPack-0.0.${{ github.run_number }}-Linux.deb
          asset_name: HellowPack-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package